{"version":3,"sources":["components/firebase/Config.js","components/firebase/Services.js","components/login/Login.js","components/hooks/useFirestore.js","components/context/AuthProvider.js","components/context/AppProvider.js","components/chatroom/RoomList.js","components/chatroom/UserInfo.js","components/chatroom/Sidebar.js","components/chatroom/Messages.js","components/chatroom/ChatWindow.js","components/chatroom/Chatroom.js","components/modals/AddRoomModal.js","components/modals/InviteMemberModal.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","Text","fbProvider","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleLogin","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keyword","style","textAlign","justify","height","span","display","marginBottom","width","onClick","icon","FacebookOutlined","GoogleOutlined","useFirestore","condition","useState","documents","setDocuments","useEffect","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AuthContext","React","createContext","AuthProvider","children","history","useHistory","setUser","isLoading","setIsLoading","unsubscribed","onAuthStateChanged","Provider","value","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberModal","setIsInviteMemberModal","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","Panel","Collapse","AddRoomStyled","styled","div","Button","LinkStyled","Link","RoomList","defaultActiveKey","header","ghost","color","PlusSquareOutlined","WrapperStyled","UserInfo","src","chatAt","toUpperCase","marginLeft","type","signOut","LogoutOutlined","SidebarStyled","Sidebar","formatDate","seconds","formattedDate","formatRelative","Date","charAt","slice","Message","text","size","className","HeaderStyled","ButtonGroupStyled","ContentStyled","FormStyled","Form","InviteBtnStyled","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form","handleOnSubmit","roomId","resetFields","conditionMessages","messages","description","UserAddOutlined","Group","maxCount","member","title","mes","Item","flex","placeholder","autoComplete","bordered","onPressEnter","onChange","e","target","message","showIcon","margin","closable","Chatroom","AddRoomModal","visible","onOk","getFieldValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","currentMembers","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","get","includes","InviteMemberModal","setValue","console","log","update","val","mode","newValue","App","component","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a07f8eb7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAhQ0aywq5wgeyLCpehZgYV894H5wFqi-U\",\r\n  authDomain: \"realtimechat-6ba2a.firebaseapp.com\",\r\n  projectId: \"realtimechat-6ba2a\",\r\n  storageBucket: \"realtimechat-6ba2a.appspot.com\",\r\n  messagingSenderId: \"502722494732\",\r\n  appId: \"1:502722494732:web:173225f9aecfc3bdb7c929\",\r\n  measurementId: \"G-TE0ZXK0Q4Q\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\n\r\nexport { auth, db };\r\n\r\nexport default firebase;\r\n","import firebase, { db } from \"./Config\";\r\n\r\nexport const addDocument = (collection, data) => {\r\n  const query = db.collection(collection);\r\n\r\n  query.add({\r\n    ...data,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n  });\r\n};\r\n\r\nexport const generateKeywords = (displayName) => {\r\n  const name = displayName.split(\" \").filter((word) => word);\r\n\r\n  const length = name.length;\r\n  let flagArray = [];\r\n  let result = [];\r\n  let stringArray = [];\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    flagArray[i] = false;\r\n  }\r\n\r\n  const createKeywords = (name) => {\r\n    const arrName = [];\r\n    let curName = \"\";\r\n    name.split(\"\").forEach((letter) => {\r\n      curName += letter;\r\n      arrName.push(curName);\r\n    });\r\n    return arrName;\r\n  };\r\n\r\n  function findPermutation(k) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (!flagArray[i]) {\r\n        flagArray[i] = true;\r\n        result[k] = name[i];\r\n\r\n        if (k === length - 1) {\r\n          stringArray.push(result.join(\" \"));\r\n        }\r\n\r\n        findPermutation(k + 1);\r\n        flagArray[i] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  findPermutation(0);\r\n\r\n  const keywords = stringArray.reduce((acc, cur) => {\r\n    const words = createKeywords(cur);\r\n    return [...acc, ...words];\r\n  }, []);\r\n\r\n  return keywords;\r\n};\r\n","import { Button, Col, Row, Typography } from \"antd\";\r\nimport firebase, { auth } from \"../firebase/Config\";\r\nimport { addDocument, generateKeywords } from \"../firebase/Services\";\r\nimport { GoogleOutlined, FacebookOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst Login = () => {\r\n  const handleLogin = async (provider) => {\r\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n    if (additionalUserInfo?.isNewUser) {\r\n      addDocument(\"users\", {\r\n        displayName: user.displayName,\r\n        email: user.email,\r\n        photoURL: user.photoURL,\r\n        uid: user.uid,\r\n        providerId: additionalUserInfo.providerId,\r\n        keyword: generateKeywords(user.displayName),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Row justify=\"center\" style={{ height: 800 }}>\r\n        <Col span={8}>\r\n          <Title>Chat App</Title>\r\n          <Text\r\n            style={{ textAlign: \"center\", display: \"block\", marginBottom: 5 }}\r\n          >\r\n            Đăng nhập\r\n          </Text>\r\n          <Button\r\n            style={{ width: \"100%\", marginBottom: \"5px\" }}\r\n            onClick={() => handleLogin(fbProvider)}\r\n            icon={<FacebookOutlined />}\r\n          >\r\n            Facebook\r\n          </Button>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => handleLogin(googleProvider)}\r\n            icon={<GoogleOutlined />}\r\n          >\r\n            Google\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase/Config\";\r\n\r\nconst useFirestore = (collection, condition) => {\r\n  const [documents, setDocuments] = useState([]);\r\n  useEffect(() => {\r\n    let collectionRef = db.collection(collection).orderBy(\"createdAt\");\r\n\r\n    if (condition) {\r\n      if (!condition.compareValue || !condition.compareValue.length) {\r\n        return;\r\n      }\r\n\r\n      collectionRef = collectionRef.where(\r\n        condition.fieldName,\r\n        condition.operator,\r\n        condition.compareValue\r\n      );\r\n    }\r\n\r\n    const unsubscribed = collectionRef.onSnapshot((snapshot) => {\r\n      const documents = snapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setDocuments(documents);\r\n    });\r\n\r\n    return unsubscribed;\r\n  }, [collection, condition]);\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;\r\n","import { Spin } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/Config\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        history.push(\"/\");\r\n        return;\r\n      }\r\n\r\n      setIsLoading(false);\r\n      history.push(\"/login\");\r\n    });\r\n\r\n    return () => {\r\n      unsubscribed();\r\n    };\r\n  }, [history]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <Spin /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext, useMemo, useState } from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n  const [isInviteMemberModal, setIsInviteMemberModal] = useState(false);\r\n  const [selectedRoomId, setSelectedRoomId] = useState(\"\");\r\n  const {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n\r\n  const roomsCondition = useMemo(() => {\r\n    return {\r\n      fieldName: \"members\",\r\n      operator: \"array-contains\",\r\n      compareValue: uid,\r\n    };\r\n  }, [uid]);\r\n\r\n  const rooms = useFirestore(\"rooms\", roomsCondition);\r\n\r\n  const selectedRoom = useMemo(\r\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\r\n    [rooms, selectedRoomId]\r\n  );\r\n\r\n  const usersCondition = useMemo(() => {\r\n    return {\r\n      fieldName: \"uid\",\r\n      operator: \"in\",\r\n      compareValue: selectedRoom.members,\r\n    };\r\n  }, [selectedRoom.members]);\r\n  const members = useFirestore(\"users\", usersCondition);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        rooms,\r\n        members,\r\n        isAddRoomVisible,\r\n        setIsAddRoomVisible,\r\n        selectedRoomId,\r\n        setSelectedRoomId,\r\n        selectedRoom,\r\n        isInviteMemberModal,\r\n        setIsInviteMemberModal,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import { Button, Collapse, Typography } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppProvider\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst Wrapper = styled.div`\r\n  &&& {\r\n    height: calc(100% - 57px);\r\n\r\n    .ant-collapse {\r\n      height: 100%;\r\n\r\n      &-content-box {\r\n        overflow-y: auto;\r\n        height: 100%;\r\n      }\r\n\r\n      &-header,\r\n      p {\r\n        color: white;\r\n      }\r\n\r\n      &-content-box {\r\n        padding: 0 40px;\r\n\r\n        @media screen and (max-width: 576px) {\r\n          padding: 0 16px;\r\n        }\r\n      }\r\n\r\n      &-item {\r\n        height: 100%;\r\n      }\r\n\r\n      &-content {\r\n        height: calc(100% - 46px);\r\n\r\n        @media screen and (max-width: 576px) {\r\n          height: calc(100% - 68px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddRoomStyled = styled(Button)`\r\n  color: white;\r\n  padding: 0;\r\n\r\n  &:hover,\r\n  &:focus,\r\n  &:active {\r\n    color: #cecece;\r\n  }\r\n`;\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: white;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\nconst RoomList = () => {\r\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId } =\r\n    useContext(AppContext);\r\n\r\n  const handleAddRoom = () => {\r\n    setIsAddRoomVisible(true);\r\n  };\r\n\r\n  return (\r\n    <Collapse defaultActiveKey={[\"1\"]}>\r\n      <Panel header=\"Room List\" key=\"1\">\r\n        {rooms.map((room) => (\r\n          <LinkStyled onClick={() => setSelectedRoomId(room.id)} key={room.id}>\r\n            {room.name}\r\n          </LinkStyled>\r\n        ))}\r\n        <AddRoomStyled\r\n          onClick={handleAddRoom}\r\n          ghost\r\n          style={{ color: \"green\" }}\r\n          icon={<PlusSquareOutlined />}\r\n        >\r\n          Thêm phòng\r\n        </AddRoomStyled>\r\n      </Panel>\r\n      <LinkStyled></LinkStyled>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default RoomList;\r\n","import { Avatar, Button, Typography } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { auth } from \"../firebase/Config\";\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\nimport styled from \"styled-components\";\r\nimport { LogoutOutlined } from \"@ant-design/icons\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgba(82, 38, 83);\r\n  .username {\r\n    color: white;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\nconst UserInfo = () => {\r\n  const {\r\n    user: { displayName, photoURL },\r\n  } = useContext(AuthContext);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar src={photoURL}>\r\n          {photoURL ? \"\" : displayName?.chatAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text style={{ marginLeft: \"5px\" }}>\r\n          {displayName}\r\n        </Typography.Text>\r\n      </div>\r\n      <Button\r\n        type=\"text\"\r\n        onClick={() => auth.signOut()}\r\n        icon={<LogoutOutlined />}\r\n      ></Button>\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { Col, Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport RoomList from \"./RoomList\";\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nconst SidebarStyled = styled.div`\r\n  background: #fff;\r\n  color: #fff;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <SidebarStyled>\r\n      <Row>\r\n        <Col span={24}>\r\n          <UserInfo />\r\n        </Col>\r\n        <Col span={24}>\r\n          <RoomList />\r\n        </Col>\r\n      </Row>\r\n    </SidebarStyled>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Avatar, Typography } from \"antd\";\r\nimport { formatRelative } from \"date-fns\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  margin-bottom: 10px;\r\n  .author {\r\n    margin-left: 5px;\r\n    font-weight: bold;\r\n  }\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n  .content {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n  let formattedDate = \"\";\r\n\r\n  if (seconds) {\r\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n\r\n    formattedDate =\r\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n  }\r\n\r\n  return formattedDate;\r\n}\r\n\r\nexport default function Message({ text, displayName, createdAt, photoURL }) {\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n        <Avatar size=\"small\" src={photoURL}>\r\n          {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\r\n        </Avatar>\r\n        <Typography.Text className=\"author\">{displayName}</Typography.Text>\r\n        <Typography.Text className=\"date\">\r\n          {formatDate(createdAt?.seconds)}\r\n        </Typography.Text>\r\n      </div>\r\n      <div>\r\n        <Typography.Text className=\"content\">{text}</Typography.Text>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import { Button, Avatar, Tooltip, Input, Form, Alert } from \"antd\";\r\nimport { UserAddOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport Messages from \"./Messages\";\r\nimport { useContext, useMemo, useState } from \"react\";\r\nimport { AppContext } from \"../context/AppProvider\";\r\nimport { addDocument } from \"../firebase/Services\";\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      overflow: hidden;\r\n      height: 56px;\r\n    }\r\n\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    &__description {\r\n      font-size: 12px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst InviteBtnStyled = styled(Button)`\r\n  @media screen and (max-width: 576px) {\r\n    span:nth-child(2) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ChatWindow = () => {\r\n  const { selectedRoom, members, setIsInviteMemberModal } =\r\n    useContext(AppContext);\r\n  const {\r\n    user: { uid, photoURL, displayName },\r\n  } = useContext(AuthContext);\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    addDocument(\"messages\", {\r\n      text: inputValue,\r\n      uid,\r\n      photoURL,\r\n      roomId: selectedRoom.id,\r\n      displayName,\r\n    });\r\n    form.resetFields([\"message\"]);\r\n  };\r\n\r\n  const conditionMessages = useMemo(\r\n    () => ({\r\n      fieldName: \"roomId\",\r\n      operator: \"==\",\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n  const messages = useFirestore(\"messages\", conditionMessages);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      {selectedRoom.id ? (\r\n        <>\r\n          <HeaderStyled>\r\n            <div className=\"header__info\">\r\n              <p className=\"header__title\">{selectedRoom.name}</p>\r\n              <span className=\"header__description\">\r\n                {selectedRoom.description}\r\n              </span>\r\n            </div>\r\n            <ButtonGroupStyled>\r\n              <InviteBtnStyled\r\n                style={{ color: \"green\" }}\r\n                type=\"text\"\r\n                icon={<UserAddOutlined />}\r\n                onClick={() => setIsInviteMemberModal(true)}\r\n              >\r\n                Add\r\n              </InviteBtnStyled>\r\n              <Avatar.Group size=\"small\" maxCount={2}>\r\n                {members.map((member) => (\r\n                  <Tooltip\r\n                    key={member.id}\r\n                    title={member.displayName}\r\n                    id={member.id}\r\n                  >\r\n                    <Avatar src={member.photoURL}>\r\n                      {member.displayName\r\n                        ? \"\"\r\n                        : member.displayName?.charAt(0)?.toUpperCase()}\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                ))}\r\n              </Avatar.Group>\r\n            </ButtonGroupStyled>\r\n          </HeaderStyled>\r\n          <ContentStyled>\r\n            <MessageListStyled>\r\n              {messages.map((mes) => (\r\n                <Messages\r\n                  key={mes.id}\r\n                  text={mes.text}\r\n                  photoURL={mes.photoURL}\r\n                  createdAt={mes.createdAt}\r\n                  displayName={mes.displayName}\r\n                />\r\n              ))}\r\n            </MessageListStyled>\r\n            <FormStyled form={form}>\r\n              <Form.Item name=\"message\" style={{ flex: 1, marginBottom: 0 }}>\r\n                <Input\r\n                  placeholder=\"Nhập tin nhắn\"\r\n                  autoComplete=\"off\"\r\n                  bordered={false}\r\n                  onPressEnter={handleOnSubmit}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Form.Item>\r\n              <Button type=\"primary\" onClick={handleOnSubmit}>\r\n                Gửi\r\n              </Button>\r\n            </FormStyled>\r\n          </ContentStyled>\r\n        </>\r\n      ) : (\r\n        <Alert\r\n          message=\"Hãy chọn phòng\"\r\n          type=\"info\"\r\n          showIcon\r\n          style={{ margin: 5 }}\r\n          closable\r\n        />\r\n      )}\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import Sidebar from \"./Sidebar\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nconst Chatroom = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col span={16}>\r\n          <ChatWindow />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatroom;\r\n","import { Modal, Form, Input } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppProvider\";\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\nimport { addDocument } from \"../firebase/Services\";\r\n\r\nconst AddRoomModal = () => {\r\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n  const {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    addDocument(\"rooms\", { ...form.getFieldValue(), members: [uid] });\r\n    setIsAddRoomVisible(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsAddRoomVisible(false);\r\n    form.resetFields();\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Tạo phòng\"\r\n        visible={isAddRoomVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item label=\"Tên phòng\" name=\"name\">\r\n            <Input placeholder=\"Nhập tên phòng\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"Mô tả\" name=\"description\">\r\n            <Input.TextArea placeholder=\"Nhập mô tả\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRoomModal;\r\n","import { Modal, Form, Spin, Select, Avatar } from \"antd\";\r\nimport { debounce } from \"lodash\";\r\nimport { useContext, useMemo, useState } from \"react\";\r\nimport { AppContext } from \"../context/AppProvider\";\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\nimport { db } from \"../firebase/Config\";\r\n\r\nfunction DebounceSelect({ fetchOptions, debounceTimeout = 300, ...props }) {\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, props.currentMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions]);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size=\"small\" src={opt.photoURL}>\r\n            {opt.photoURL ? \"\" : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {`${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nasync function fetchUserList(search, currentMembers) {\r\n  return db\r\n    .collection(\"users\")\r\n    .get()\r\n    .then((snapshot) => {\r\n      return snapshot.docs\r\n        .map((doc) => ({\r\n          label: doc.data().displayName,\r\n          value: doc.data().uid,\r\n          photoURL: doc.data().photoURL,\r\n        }))\r\n        .filter((opt) => !currentMembers.includes(opt.value));\r\n    });\r\n}\r\n\r\nconst InviteMemberModal = () => {\r\n  const {\r\n    isInviteMemberModal,\r\n    setIsInviteMemberModal,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  const {\r\n    user: { uid },\r\n  } = useContext(AuthContext);\r\n  const [value, setValue] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    const roomRef = db.collection(\"rooms\").doc(selectedRoomId);\r\n    roomRef.update({\r\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n    });\r\n    setIsInviteMemberModal(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsInviteMemberModal(false);\r\n    form.resetFields();\r\n  };\r\n\r\n  console.log(value);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Mời thêm thành viên\"\r\n        visible={isInviteMemberModal}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form form={form} layout=\"vertical\">\r\n          <DebounceSelect\r\n            mode=\"multiple\"\r\n            label=\"Tên các thành viên\"\r\n            value={value}\r\n            placeholder=\"Tên thành viên\"\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            currentMembers={selectedRoom.members}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InviteMemberModal;\r\n","import \"./App.css\";\nimport Login from \"./components/login/Login\";\nimport Chatroom from \"./components/chatroom/Chatroom\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport AuthProvider from \"./components/context/AuthProvider\";\nimport AppProvider from \"./components/context/AppProvider\";\nimport AddRoomModal from \"./components/modals/AddRoomModal\";\nimport InviteMemberModal from \"./components/modals/InviteMemberModal\";\n\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <AppProvider>\n          <Switch>\n            <Route component={Login} path=\"/login\" />\n            <Route component={Chatroom} path=\"/\" />\n          </Switch>\n          <AddRoomModal />\n          <InviteMemberModal />\n        </AppProvider>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}